{"cells":[{"cell_type":"markdown","metadata":{"id":"ZWpIqYjsBJFn"},"source":["# Mount a Cloud Storage location into the local filesystem\n","\n","You can use [Cloud Storage FUSE](https://cloud.google.com/storage/docs/gcs-fuse) to mount a Cloud Storage location to access it directly as a local filesystem path.\n","\n","\n","**Project ID:** storm-wall-426714-r0\n","\n","**Mount Path (without gs:// prefix)**: 281-project-d5d834b8-2d7c-11ef-91d5-b89a2a9d8518"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X0WH8rvDBtiG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1720627578834,"user_tz":-480,"elapsed":33439,"user":{"displayName":"Man Eunice Ngai","userId":"03672653001411209211"}},"outputId":"d5ef7c7e-e9cf-454d-9a71-4f36a5d4d87c"},"outputs":[{"output_type":"stream","name":"stdout","text":["deb https://packages.cloud.google.com/apt gcsfuse-jammy main\n","  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n","                                 Dload  Upload   Total   Spent    Left  Speed\n","100  2659  100  2659    0     0  23362      0 --:--:-- --:--:-- --:--:-- 23530\n","Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).\n","OK\n","53 packages can be upgraded. Run 'apt list --upgradable' to see them.\n","\u001b[1;33mW: \u001b[0mhttps://packages.cloud.google.com/apt/dists/gcsfuse-jammy/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.\u001b[0m\n","The following NEW packages will be installed:\n","  gcsfuse\n","0 upgraded, 1 newly installed, 0 to remove and 53 not upgraded.\n","Need to get 11.0 MB of archives.\n","After this operation, 0 B of additional disk space will be used.\n","Selecting previously unselected package gcsfuse.\n","(Reading database ... 121925 files and directories currently installed.)\n","Preparing to unpack .../gcsfuse_2.3.1_amd64.deb ...\n","Unpacking gcsfuse (2.3.1) ...\n","Setting up gcsfuse (2.3.1) ...\n"]}],"source":["# Authenticate.\n","from google.colab import auth\n","auth.authenticate_user()\n","\n","# Install Cloud Storage FUSE.\n","!echo \"deb https://packages.cloud.google.com/apt gcsfuse-`lsb_release -c -s` main\" | sudo tee /etc/apt/sources.list.d/gcsfuse.list\n","!curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -\n","!apt -qq update && apt -qq install gcsfuse"]},{"cell_type":"markdown","metadata":{"id":"ofuhAvHJDab0"},"source":["You can mount an entire bucket, or a path location within that bucket.\n","The local path to mount it must exist."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jLIc0g5DB7li","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1720627584353,"user_tz":-480,"elapsed":817,"user":{"displayName":"Man Eunice Ngai","userId":"03672653001411209211"}},"outputId":"f7d6cc17-4fd0-432a-c0fb-c1c878c7d60f"},"outputs":[{"output_type":"stream","name":"stdout","text":["{\"timestamp\":{\"seconds\":1720627582,\"nanos\":880805967},\"severity\":\"INFO\",\"message\":\"Start gcsfuse/2.3.1 (Go version go1.22.4) for app \\\"\\\" using mount point: /mnt/gs/281-project-d5d834b8-2d7c-11ef-91d5-b89a2a9d8518\\n\"}\n","{\"timestamp\":{\"seconds\":1720627582,\"nanos\":881104402},\"severity\":\"INFO\",\"message\":\"GCSFuse mount command flags: {\\\"AppName\\\":\\\"\\\",\\\"Foreground\\\":false,\\\"ConfigFile\\\":\\\"\\\",\\\"MountOptions\\\":{},\\\"DirMode\\\":493,\\\"FileMode\\\":420,\\\"Uid\\\":-1,\\\"Gid\\\":-1,\\\"ImplicitDirs\\\":true,\\\"OnlyDir\\\":\\\"\\\",\\\"RenameDirLimit\\\":0,\\\"IgnoreInterrupts\\\":true,\\\"CustomEndpoint\\\":null,\\\"BillingProject\\\":\\\"\\\",\\\"KeyFile\\\":\\\"\\\",\\\"TokenUrl\\\":\\\"\\\",\\\"ReuseTokenFromUrl\\\":true,\\\"EgressBandwidthLimitBytesPerSecond\\\":-1,\\\"OpRateLimitHz\\\":-1,\\\"SequentialReadSizeMb\\\":200,\\\"AnonymousAccess\\\":false,\\\"MaxRetrySleep\\\":30000000000,\\\"StatCacheCapacity\\\":20460,\\\"StatCacheTTL\\\":60000000000,\\\"TypeCacheTTL\\\":60000000000,\\\"KernelListCacheTtlSeconds\\\":0,\\\"HttpClientTimeout\\\":0,\\\"MaxRetryDuration\\\":-1000000000,\\\"RetryMultiplier\\\":2,\\\"LocalFileCache\\\":false,\\\"TempDir\\\":\\\"\\\",\\\"ClientProtocol\\\":\\\"http1\\\",\\\"MaxConnsPerHost\\\":0,\\\"MaxIdleConnsPerHost\\\":100,\\\"EnableNonexistentTypeCache\\\":false,\\\"StackdriverExportInterval\\\":0,\\\"OtelCollectorAddress\\\":\\\"\\\",\\\"LogFile\\\":\\\"\\\",\\\"LogFormat\\\":\\\"json\\\",\\\"ExperimentalEnableJsonRead\\\":false,\\\"DebugFuseErrors\\\":true,\\\"DebugFuse\\\":false,\\\"DebugFS\\\":false,\\\"DebugGCS\\\":false,\\\"DebugHTTP\\\":false,\\\"DebugInvariants\\\":false,\\\"DebugMutex\\\":false,\\\"ExperimentalMetadataPrefetchOnMount\\\":\\\"disabled\\\"}\"}\n","{\"timestamp\":{\"seconds\":1720627582,\"nanos\":881238848},\"severity\":\"INFO\",\"message\":\"GCSFuse mount config flags: {\\\"CreateEmptyFile\\\":false,\\\"Severity\\\":\\\"INFO\\\",\\\"Format\\\":\\\"json\\\",\\\"FilePath\\\":\\\"\\\",\\\"LogRotateConfig\\\":{\\\"MaxFileSizeMB\\\":512,\\\"BackupFileCount\\\":10,\\\"Compress\\\":true},\\\"MaxSizeMB\\\":-1,\\\"CacheFileForRangeRead\\\":false,\\\"EnableParallelDownloads\\\":false,\\\"ParallelDownloadsPerFile\\\":16,\\\"MaxParallelDownloads\\\":16,\\\"DownloadChunkSizeMB\\\":50,\\\"EnableCRC\\\":false,\\\"CacheDir\\\":\\\"\\\",\\\"TtlInSeconds\\\":-9223372036854775808,\\\"TypeCacheMaxSizeMB\\\":4,\\\"StatCacheMaxSizeMB\\\":-9223372036854775808,\\\"EnableEmptyManagedFolders\\\":false,\\\"GRPCConnPoolSize\\\":1,\\\"AnonymousAccess\\\":false,\\\"EnableHNS\\\":false,\\\"IgnoreInterrupts\\\":true,\\\"DisableParallelDirops\\\":false,\\\"KernelListCacheTtlSeconds\\\":0}\"}\n","{\"timestamp\":{\"seconds\":1720627583,\"nanos\":289490562},\"severity\":\"INFO\",\"message\":\"File system has been successfully mounted.\"}\n"]}],"source":["# Mount a Cloud Storage bucket or location, without the gs:// prefix.\n","mount_path = \"281-project-d5d834b8-2d7c-11ef-91d5-b89a2a9d8518\"  # or a location like \"my-bucket/path/to/mount\"\n","local_path = f\"/mnt/gs/{mount_path}\"\n","\n","!mkdir -p {local_path}\n","!gcsfuse --implicit-dirs {mount_path} {local_path}"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lgwiXtPGFumF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1720627588535,"user_tz":-480,"elapsed":381,"user":{"displayName":"Man Eunice Ngai","userId":"03672653001411209211"}},"outputId":"4d05adcd-b896-45c2-bb95-7803837c2e92"},"outputs":[{"output_type":"stream","name":"stdout","text":["total 0\n","drwxr-xr-x 1 root root 0 Jul 10 16:06 raw-data\n"]}],"source":["# Then you can access it like a local path.\n","!ls -lh {local_path}"]},{"cell_type":"markdown","metadata":{"id":"NAM6vyXAfVUj"},"source":["# Saving data with gsutil\n","\n","- Use the [Cloud Resource Manager](https://cloud.google.com/resource-manager) to create a project if you do not already have one.\n","- [Enable billing](https://support.google.com/cloud/answer/6293499#enable-billing) for the project.\n","- See [Google Cloud Storage (GCS) Documentation](https://cloud.google.com/storage/) for more info.\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LADpx7LReOMk","executionInfo":{"status":"ok","timestamp":1720649531048,"user_tz":300,"elapsed":22270,"user":{"displayName":"Juliana Gomez Consuegra","userId":"13034524227628268551"}},"outputId":"4fb0807d-0d69-4bb0-bd4c-0ca147a3ff0a","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["Updated property [core/project].\n"]}],"source":["from google.colab import auth\n","auth.authenticate_user()\n","\n","# https://cloud.google.com/resource-manager/docs/creating-managing-projects\n","project_id = 'storm-wall-426714-r0'\n","!gcloud config set project {project_id}"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"f8LMNz9SR0Iz"},"outputs":[],"source":["# Create a local file with data to upload.\n","with open('/tmp/to_upload.txt', 'w') as f:\n","  f.write('my sample file')\n","\n","import uuid\n","\n","# Make a unique bucket to which we'll upload the file.\n","# (GCS buckets are part of a single global namespace.)\n","bucket_name = 'colab-sample-bucket-' + str(uuid.uuid1())\n","\n","# Full reference: https://cloud.google.com/storage/docs/gsutil/commands/mb\n","!gsutil mb gs://{bucket_name}\n","\n","# Copy the file to our new bucket.\n","# Full reference: https://cloud.google.com/storage/docs/gsutil/commands/cp\n","!gsutil cp /tmp/to_upload.txt gs://{bucket_name}/\n","\n","# Finally, dump the contents of our newly copied file to make sure everything worked.\n","!gsutil cat gs://{bucket_name}/to_upload.txt"]},{"cell_type":"markdown","metadata":{"id":"0ENMqxq25szn"},"source":["# Saving data with the Cloud Storage Python API\n","\n","- Use the [Cloud Resource Manager](https://cloud.google.com/resource-manager) to create a project if you do not already have one.\n","- [Enable billing](https://support.google.com/cloud/answer/6293499#enable-billing) for the project.\n","- See [Google Cloud Storage (GCS) Documentation](https://cloud.google.com/storage/) for more info.\n","\n","You can also use [gsutil](https://cloud.google.com/storage/docs/gsutil) to interact with [Google Cloud Storage (GCS)](https://cloud.google.com/storage/).\n","This snippet is based on [a larger example](https://github.com/GoogleCloudPlatform/storage-file-transfer-json-python/blob/master/chunked_transfer.py)."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YsXBVQqkArHD"},"outputs":[],"source":["from google.colab import auth\n","auth.authenticate_user()\n","\n","# https://cloud.google.com/resource-manager/docs/creating-managing-projects\n","project_id = '[your Cloud Platform project ID]'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YFVbF4cdhd9Y"},"outputs":[],"source":["from googleapiclient.discovery import build\n","gcs_service = build('storage', 'v1')\n","\n","# Generate a random bucket name to which we'll upload the file.\n","import uuid\n","bucket_name = 'colab-sample-bucket' + str(uuid.uuid1())\n","\n","body = {\n","  'name': bucket_name,\n","  # For a full list of locations, see:\n","  # https://cloud.google.com/storage/docs/bucket-locations\n","  'location': 'us',\n","}\n","gcs_service.buckets().insert(project=project_id, body=body).execute()\n","print('Done')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cFAq-F2af5TJ"},"outputs":[],"source":["from googleapiclient.http import MediaFileUpload\n","\n","media = MediaFileUpload('/tmp/to_upload.txt',\n","                        mimetype='text/plain',\n","                        resumable=True)\n","\n","request = gcs_service.objects().insert(bucket=bucket_name,\n","                                       name='to_upload.txt',\n","                                       media_body=media)\n","\n","response = None\n","while response is None:\n","  # _ is a placeholder for a progress object that we ignore.\n","  # (Our file is small, so we skip reporting progress.)\n","  _, response = request.next_chunk()\n","\n","print('Upload complete')\n","print('https://console.cloud.google.com/storage/browser?project={}'.format(project_id))"]}],"metadata":{"colab":{"provenance":[{"file_id":"/v2/external/notebooks/snippets/gcs.ipynb","timestamp":1719529877449}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}